//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v10.6.6324.28497 (NJsonSchema v8.33.6323.36213) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace ZalandoShop.UWP.Model.Entities.ZalandoShop
{
#pragma warning disable // Disable all warnings



    /// <summary>A single article</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Article
    {
        /// <summary>unique article id</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Id { get; set; }

        /// <summary>unique article model id</summary>
        [Newtonsoft.Json.JsonProperty("modelId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ModelId { get; set; }

        /// <summary>article name</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>url of the article within the Zalando webshop</summary>
        [Newtonsoft.Json.JsonProperty("shopUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ShopUrl { get; set; }

        /// <summary>the main color of the article</summary>
        [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Color { get; set; }

        /// <summary>will be true if at least one article unit is available</summary>
        [Newtonsoft.Json.JsonProperty("available", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Available { get; set; }

        /// <summary>collection season the article belongs to</summary>
        [Newtonsoft.Json.JsonProperty("season", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ArticleSeason Season { get; set; }

        /// <summary>collection year the article belongs to. Could be either a year or 'ALL'</summary>
        [Newtonsoft.Json.JsonProperty("seasonYear", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^ALL$|^20[0-9]{2}$")]
        public string SeasonYear { get; set; }

        /// <summary>timestamp the article was available in the Zalando webshop</summary>
        [Newtonsoft.Json.JsonProperty("activationDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.DateTime ActivationDate { get; set; }

        /// <summary>any additional information of the article </summary>
        [Newtonsoft.Json.JsonProperty("additionalInfos", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<string> AdditionalInfos { get; set; } = new System.Collections.Generic.List<string>();

        /// <summary>gender of the article belongs to</summary>
        [Newtonsoft.Json.JsonProperty("genders", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<Anonymous25> Genders { get; set; } = new System.Collections.Generic.List<Anonymous25>();

        /// <summary>age group of the article belongs to</summary>
        [Newtonsoft.Json.JsonProperty("ageGroups", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<Anonymous26> AgeGroups { get; set; } = new System.Collections.Generic.List<Anonymous26>();

        [Newtonsoft.Json.JsonProperty("brand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public Brand Brand { get; set; } = new Brand();

        /// <summary>category keys of the article belongs to</summary>
        [Newtonsoft.Json.JsonProperty("categoryKeys", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<string> CategoryKeys { get; set; } = new System.Collections.Generic.List<string>();

        /// <summary>article attributes</summary>
        [Newtonsoft.Json.JsonProperty("attributes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<ArticleAttribute> Attributes { get; set; } = new System.Collections.Generic.List<ArticleAttribute>();

        /// <summary>price of the article</summary>
        [Newtonsoft.Json.JsonProperty("units", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<ArticleUnit> Units { get; set; } = new System.Collections.Generic.List<ArticleUnit>();

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> Tags { get; set; }

        [Newtonsoft.Json.JsonProperty("media", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public ArticleMedia Media { get; set; } = new ArticleMedia();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Article FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Article>(data);
        }
    }

    /// <summary>Zalando API Article Attribute Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleAttribute
    {
        /// <summary>name of the article attribute</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>value of the article attribute</summary>
        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<string> Values { get; set; } = new System.Collections.Generic.List<string>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleAttribute FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleAttribute>(data);
        }
    }

    /// <summary>Zalando API Article Image Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleImage
    {
        /// <summary>sequence of the article images</summary>
        [Newtonsoft.Json.JsonProperty("orderNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int OrderNumber { get; set; }

        /// <summary>model or non model type article images</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Type { get; set; }

        /// <summary>thumbnail HD url of the article images</summary>
        [Newtonsoft.Json.JsonProperty("thumbnailHdUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ThumbnailHdUrl { get; set; }

        /// <summary>small image of the article</summary>
        [Newtonsoft.Json.JsonProperty("smallUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string SmallUrl { get; set; }

        /// <summary>small HD image of the article</summary>
        [Newtonsoft.Json.JsonProperty("smallHdUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string SmallHdUrl { get; set; }

        /// <summary>medium image of the article</summary>
        [Newtonsoft.Json.JsonProperty("mediumUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string MediumUrl { get; set; }

        /// <summary>medium HD image of the article</summary>
        [Newtonsoft.Json.JsonProperty("mediumHdUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string MediumHdUrl { get; set; }

        /// <summary>large image of the article</summary>
        [Newtonsoft.Json.JsonProperty("largeUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string LargeUrl { get; set; }

        /// <summary>large HD image of the article</summary>
        [Newtonsoft.Json.JsonProperty("largeHdUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string LargeHdUrl { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleImage FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleImage>(data);
        }
    }

    /// <summary>Zalando API Article Media Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleMedia
    {
        [Newtonsoft.Json.JsonProperty("images", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<ArticleImage> Images { get; set; } = new System.Collections.Generic.List<ArticleImage>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleMedia FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleMedia>(data);
        }
    }

    /// <summary>Zalando API Article Price Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticlePrice
    {
        [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Currency { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }

        [Newtonsoft.Json.JsonProperty("formatted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Formatted { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticlePrice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticlePrice>(data);
        }
    }

    /// <summary>Zalando API Article Review Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleReview
    {
        /// <summary>unique article review id</summary>
        [Newtonsoft.Json.JsonProperty("reviewId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ReviewId { get; set; }

        [Newtonsoft.Json.JsonProperty("articleId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ArticleId { get; set; }

        [Newtonsoft.Json.JsonProperty("articleModelId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ArticleModelId { get; set; }

        /// <summary>Customer short name in the article review</summary>
        [Newtonsoft.Json.JsonProperty("customerNickname", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerNickname { get; set; }

        /// <summary>customer city in the article review</summary>
        [Newtonsoft.Json.JsonProperty("customerCity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerCity { get; set; }

        /// <summary>customer country in the article review</summary>
        [Newtonsoft.Json.JsonProperty("customerCountry", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerCountry { get; set; }

        /// <summary>language in the article review</summary>
        [Newtonsoft.Json.JsonProperty("language", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Language { get; set; }

        /// <summary>title in the article review</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Title { get; set; }

        /// <summary>description of the article review</summary>
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Description { get; set; }

        /// <summary>article review created date and time</summary>
        [Newtonsoft.Json.JsonProperty("created", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.DateTime Created { get; set; }

        /// <summary>customer rating of the article</summary>
        [Newtonsoft.Json.JsonProperty("rating", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Rating { get; set; }

        /// <summary>customer recommend to the article</summary>
        [Newtonsoft.Json.JsonProperty("recommend", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Recommend { get; set; }

        /// <summary>customer review helpful count of the article</summary>
        [Newtonsoft.Json.JsonProperty("helpfulCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int HelpfulCount { get; set; }

        /// <summary>customer review unhelpful count of the article</summary>
        [Newtonsoft.Json.JsonProperty("unhelpfulCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int UnhelpfulCount { get; set; }

        [Newtonsoft.Json.JsonProperty("articleSizeRatings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ArticleSizeRatings ArticleSizeRatings { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleReview FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleReview>(data);
        }
    }

    /// <summary>Zalando API Article Reviews Summary Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleReviewsSummary
    {
        [Newtonsoft.Json.JsonProperty("articleModelId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ArticleModelId { get; set; }

        /// <summary>average star rating of the article</summary>
        [Newtonsoft.Json.JsonProperty("averageStarRating", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double AverageStarRating { get; set; }

        /// <summary>number of user reviews of the article</summary>
        [Newtonsoft.Json.JsonProperty("numberOfUserReviews", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfUserReviews { get; set; }

        /// <summary>number of users recommended to the article</summary>
        [Newtonsoft.Json.JsonProperty("numberOfUserRecommendations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfUserRecommendations { get; set; }

        /// <summary>number of positive recommendations to the article</summary>
        [Newtonsoft.Json.JsonProperty("numberOfUserPositiveRecommendations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfUserPositiveRecommendations { get; set; }

        /// <summary>start rating distribution of the article</summary>
        [Newtonsoft.Json.JsonProperty("starRatingDistribution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public StarRatingDistribution StarRatingDistribution { get; set; } = new StarRatingDistribution();

        /// <summary>size rating of the article</summary>
        [Newtonsoft.Json.JsonProperty("articleSizeRatings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ArticleSizeRatings2 ArticleSizeRatings { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleReviewsSummary FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleReviewsSummary>(data);
        }
    }

    /// <summary>Zalando API Article Unit Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleUnit
    {
        /// <summary>article id (sku)</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Id { get; set; }

        /// <summary>article size</summary>
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Size { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public ArticlePrice Price { get; set; } = new ArticlePrice();

        [Newtonsoft.Json.JsonProperty("originalPrice", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public ArticlePrice OriginalPrice { get; set; } = new ArticlePrice();

        /// <summary>availability of the article</summary>
        [Newtonsoft.Json.JsonProperty("available", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Available { get; set; }

        /// <summary>stock of the article</summary>
        [Newtonsoft.Json.JsonProperty("stock", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Stock { get; set; }

        /// <summary>partner id (vendor id) of the article</summary>
        [Newtonsoft.Json.JsonProperty("partnerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PartnerId { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleUnit FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleUnit>(data);
        }
    }

    /// <summary>Zalando API Domain Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Domain
    {
        /// <summary>domain language</summary>
        [Newtonsoft.Json.JsonProperty("languageCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string LanguageCode { get; set; }

        /// <summary>domain country code</summary>
        [Newtonsoft.Json.JsonProperty("countryCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string CountryCode { get; set; }

        /// <summary>domain currency code</summary>
        [Newtonsoft.Json.JsonProperty("currencyCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string CurrencyCode { get; set; }

        /// <summary>domain tax rate</summary>
        [Newtonsoft.Json.JsonProperty("taxRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.0, 1.0)]
        public double TaxRate { get; set; }

        /// <summary>domain root category</summary>
        [Newtonsoft.Json.JsonProperty("rootCategoryKey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string RootCategoryKey { get; set; }

        /// <summary>domain specific url</summary>
        [Newtonsoft.Json.JsonProperty("shopUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ShopUrl { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Domain FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Domain>(data);
        }
    }

    /// <summary>Zalando API Brand Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Brand
    {
        /// <summary>The unique key for a brand</summary>
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Key { get; set; }

        /// <summary>Name of the brand</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>The url of the brand within the Zalando web shop</summary>
        [Newtonsoft.Json.JsonProperty("shopUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ShopUrl { get; set; }

        /// <summary>The url of the brand logo within the Zalando web shop</summary>
        [Newtonsoft.Json.JsonProperty("logoUrl", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LogoUrl { get; set; }

        /// <summary>The url of the large brand logo within the Zalando web shop</summary>
        [Newtonsoft.Json.JsonProperty("logoLargeUrl", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LogoLargeUrl { get; set; }

        [Newtonsoft.Json.JsonProperty("brandFamily", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BrandFamily BrandFamily { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Brand FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Brand>(data);
        }
    }

    /// <summary>Zalando API BrandFamily Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class BrandFamily
    {
        /// <summary>The unique key for a brandFamily</summary>
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Key { get; set; }

        /// <summary>Name of the brandFamily</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>The url of the brandFamily within the Zalando web shop</summary>
        [Newtonsoft.Json.JsonProperty("shopUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ShopUrl { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static BrandFamily FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BrandFamily>(data);
        }
    }

    /// <summary>wrapper object for paged responses</summary>
    [Newtonsoft.Json.JsonConverter(typeof(JsonInheritanceConverter), "content")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Page
    {
        /// <summary>total elements in the response</summary>
        [Newtonsoft.Json.JsonProperty("totalElements", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int TotalElements { get; set; }

        /// <summary>total number of pages in the response</summary>
        [Newtonsoft.Json.JsonProperty("totalPages", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int TotalPages { get; set; }

        /// <summary>page number</summary>
        [Newtonsoft.Json.JsonProperty("page", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Page1 { get; set; }

        /// <summary>total number of elements in a page</summary>
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Size { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Page FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Page>(data);
        }
    }

    /// <summary>Zalando API Category Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Category
    {
        /// <summary>The unique key for a category</summary>
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Key { get; set; }

        /// <summary>Name of the category</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>The key of the parent category</summary>
        [Newtonsoft.Json.JsonProperty("parentKey", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ParentKey { get; set; }

        /// <summary>The list of keys of the child categories</summary>
        [Newtonsoft.Json.JsonProperty("childKeys", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<string> ChildKeys { get; set; } = new System.Collections.Generic.List<string>();

        /// <summary>The type of the category.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; }

        /// <summary>Containing articles are from last seasons</summary>
        [Newtonsoft.Json.JsonProperty("outlet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Outlet { get; set; }

        /// <summary>The category is hidden and not shown on the Zalando web shop</summary>
        [Newtonsoft.Json.JsonProperty("hidden", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Hidden { get; set; }

        /// <summary>The target group of the articles from this category</summary>
        [Newtonsoft.Json.JsonProperty("targetGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CategoryTargetGroup TargetGroup { get; set; }

        /// <summary>list of filter names that are reasonable to use within this category</summary>
        [Newtonsoft.Json.JsonProperty("suggestedFilters", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<string> SuggestedFilters { get; set; } = new System.Collections.Generic.List<string>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Category FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Category>(data);
        }
    }

    /// <summary>Zalando API Recommendation Article Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class RecommendationsArticle
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("modelId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("shopUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ShopUrl { get; set; }

        [Newtonsoft.Json.JsonProperty("media", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public ArticleMedia Media { get; set; } = new ArticleMedia();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static RecommendationsArticle FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RecommendationsArticle>(data);
        }
    }

    /// <summary>Zalando API Filter Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Filter
    {
        /// <summary>The unique name for a filter</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }

        /// <summary>can this filter be used multiple times with different values in one search request</summary>
        [Newtonsoft.Json.JsonProperty("multiValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool MultiValue { get; set; }

        /// <summary>filter enum types</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FilterType Type { get; set; }

        /// <summary>only if type is 'enum' this list contains all possible filter values</summary>
        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<FilterValue> Values { get; set; } = new System.Collections.Generic.List<FilterValue>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Filter FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Filter>(data);
        }
    }

    /// <summary>Zalando API FilterValue Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class FilterValue
    {
        /// <summary>The key for a filterValue. Only unique within one filter</summary>
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Key { get; set; }

        /// <summary>translated display name</summary>
        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string DisplayName { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static FilterValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FilterValue>(data);
        }
    }

    /// <summary>Zalando API Facet Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class Facet
    {
        [Newtonsoft.Json.JsonProperty("filter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Filter { get; set; }

        /// <summary>list of the calculated article counts for each filter value</summary>
        [Newtonsoft.Json.JsonProperty("facets", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<FacetValue> Facets { get; set; } = new System.Collections.Generic.List<FacetValue>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static Facet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Facet>(data);
        }
    }

    /// <summary>Zalando API FacetValue Schema</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class FacetValue
    {
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Key { get; set; }

        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string DisplayName { get; set; }

        /// <summary>number of articles matching this filter value</summary>
        [Newtonsoft.Json.JsonProperty("count", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Count { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static FacetValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FacetValue>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ErrorMessage
    {
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Status { get; set; }

        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Message { get; set; }

        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ErrorDetail> Errors { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ErrorMessage FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ErrorMessage>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ErrorDetail
    {
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Key { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("invalidName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? InvalidName { get; set; }

        [Newtonsoft.Json.JsonProperty("invalidValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> InvalidValues { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ErrorDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ErrorDetail>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous
    {
        [System.Runtime.Serialization.EnumMember(Value = "thisWeek")]
        ThisWeek = 0,

        [System.Runtime.Serialization.EnumMember(Value = "lastWeek")]
        LastWeek = 1,

        [System.Runtime.Serialization.EnumMember(Value = "lastMonth")]
        LastMonth = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous2
    {
        [System.Runtime.Serialization.EnumMember(Value = "babies")]
        Babies = 0,

        [System.Runtime.Serialization.EnumMember(Value = "kids")]
        Kids = 1,

        [System.Runtime.Serialization.EnumMember(Value = "teen")]
        Teen = 2,

        [System.Runtime.Serialization.EnumMember(Value = "adult")]
        Adult = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous3
    {
        [System.Runtime.Serialization.EnumMember(Value = "standard")]
        Standard = 0,

        [System.Runtime.Serialization.EnumMember(Value = "maternity")]
        Maternity = 1,

        [System.Runtime.Serialization.EnumMember(Value = "plusSize")]
        PlusSize = 2,

        [System.Runtime.Serialization.EnumMember(Value = "petite")]
        Petite = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous4
    {
        [System.Runtime.Serialization.EnumMember(Value = "black")]
        Black = 0,

        [System.Runtime.Serialization.EnumMember(Value = "brown")]
        Brown = 1,

        [System.Runtime.Serialization.EnumMember(Value = "beige")]
        Beige = 2,

        [System.Runtime.Serialization.EnumMember(Value = "gray")]
        Gray = 3,

        [System.Runtime.Serialization.EnumMember(Value = "white")]
        White = 4,

        [System.Runtime.Serialization.EnumMember(Value = "blue")]
        Blue = 5,

        [System.Runtime.Serialization.EnumMember(Value = "petrol")]
        Petrol = 6,

        [System.Runtime.Serialization.EnumMember(Value = "turquoise")]
        Turquoise = 7,

        [System.Runtime.Serialization.EnumMember(Value = "green")]
        Green = 8,

        [System.Runtime.Serialization.EnumMember(Value = "olive")]
        Olive = 9,

        [System.Runtime.Serialization.EnumMember(Value = "yellow")]
        Yellow = 10,

        [System.Runtime.Serialization.EnumMember(Value = "orange")]
        Orange = 11,

        [System.Runtime.Serialization.EnumMember(Value = "red")]
        Red = 12,

        [System.Runtime.Serialization.EnumMember(Value = "pink")]
        Pink = 13,

        [System.Runtime.Serialization.EnumMember(Value = "purple")]
        Purple = 14,

        [System.Runtime.Serialization.EnumMember(Value = "gold")]
        Gold = 15,

        [System.Runtime.Serialization.EnumMember(Value = "silver")]
        Silver = 16,

        [System.Runtime.Serialization.EnumMember(Value = "multicolored")]
        Multicolored = 17,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous5
    {
        [System.Runtime.Serialization.EnumMember(Value = "den15")]
        Den15 = 0,

        [System.Runtime.Serialization.EnumMember(Value = "den20")]
        Den20 = 1,

        [System.Runtime.Serialization.EnumMember(Value = "den40")]
        Den40 = 2,

        [System.Runtime.Serialization.EnumMember(Value = "den60")]
        Den60 = 3,

        [System.Runtime.Serialization.EnumMember(Value = "den80")]
        Den80 = 4,

        [System.Runtime.Serialization.EnumMember(Value = "den100")]
        Den100 = 5,

        [System.Runtime.Serialization.EnumMember(Value = "den200")]
        Den200 = 6,

        [System.Runtime.Serialization.EnumMember(Value = "den120")]
        Den120 = 7,

        [System.Runtime.Serialization.EnumMember(Value = "den12")]
        Den12 = 8,

        [System.Runtime.Serialization.EnumMember(Value = "den50")]
        Den50 = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous6
    {
        [System.Runtime.Serialization.EnumMember(Value = "angora")]
        Angora = 0,

        [System.Runtime.Serialization.EnumMember(Value = "baumwolle")]
        Baumwolle = 1,

        [System.Runtime.Serialization.EnumMember(Value = "daunen")]
        Daunen = 2,

        [System.Runtime.Serialization.EnumMember(Value = "fell")]
        Fell = 3,

        [System.Runtime.Serialization.EnumMember(Value = "fleece")]
        Fleece = 4,

        [System.Runtime.Serialization.EnumMember(Value = "frottee")]
        Frottee = 5,

        [System.Runtime.Serialization.EnumMember(Value = "kaschmir")]
        Kaschmir = 6,

        [System.Runtime.Serialization.EnumMember(Value = "lammfell")]
        Lammfell = 7,

        [System.Runtime.Serialization.EnumMember(Value = "leder")]
        Leder = 8,

        [System.Runtime.Serialization.EnumMember(Value = "lederimitat")]
        Lederimitat = 9,

        [System.Runtime.Serialization.EnumMember(Value = "merinowolle")]
        Merinowolle = 10,

        [System.Runtime.Serialization.EnumMember(Value = "microfaser")]
        Microfaser = 11,

        [System.Runtime.Serialization.EnumMember(Value = "mohair")]
        Mohair = 12,

        [System.Runtime.Serialization.EnumMember(Value = "satin")]
        Satin = 13,

        [System.Runtime.Serialization.EnumMember(Value = "schurwolle")]
        Schurwolle = 14,

        [System.Runtime.Serialization.EnumMember(Value = "seide")]
        Seide = 15,

        [System.Runtime.Serialization.EnumMember(Value = "sonstige")]
        Sonstige = 16,

        [System.Runtime.Serialization.EnumMember(Value = "textil")]
        Textil = 17,

        [System.Runtime.Serialization.EnumMember(Value = "warm")]
        Warm = 18,

        [System.Runtime.Serialization.EnumMember(Value = "wolle")]
        Wolle = 19,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous7
    {
        [System.Runtime.Serialization.EnumMember(Value = "male")]
        Male = 0,

        [System.Runtime.Serialization.EnumMember(Value = "female")]
        Female = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous8
    {
        [System.Runtime.Serialization.EnumMember(Value = "block")]
        Block = 0,

        [System.Runtime.Serialization.EnumMember(Value = "flat")]
        Flat = 1,

        [System.Runtime.Serialization.EnumMember(Value = "wedge")]
        Wedge = 2,

        [System.Runtime.Serialization.EnumMember(Value = "penny")]
        Penny = 3,

        [System.Runtime.Serialization.EnumMember(Value = "funnel")]
        Funnel = 4,

        [System.Runtime.Serialization.EnumMember(Value = "plateau")]
        Plateau = 5,

        [System.Runtime.Serialization.EnumMember(Value = "plateauBoots")]
        PlateauBoots = 6,

        [System.Runtime.Serialization.EnumMember(Value = "wedgeHidden")]
        WedgeHidden = 7,

        [System.Runtime.Serialization.EnumMember(Value = "plateauHidden")]
        PlateauHidden = 8,

        [System.Runtime.Serialization.EnumMember(Value = "plateauHeels")]
        PlateauHeels = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous9
    {
        [System.Runtime.Serialization.EnumMember(Value = "xs")]
        Xs = 0,

        [System.Runtime.Serialization.EnumMember(Value = "s")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = "m")]
        M = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous10
    {
        [System.Runtime.Serialization.EnumMember(Value = "business")]
        Business = 0,

        [System.Runtime.Serialization.EnumMember(Value = "octoberFest")]
        OctoberFest = 1,

        [System.Runtime.Serialization.EnumMember(Value = "loungeWear")]
        LoungeWear = 2,

        [System.Runtime.Serialization.EnumMember(Value = "evening")]
        Evening = 3,

        [System.Runtime.Serialization.EnumMember(Value = "party")]
        Party = 4,

        [System.Runtime.Serialization.EnumMember(Value = "leisure")]
        Leisure = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous11
    {
        [System.Runtime.Serialization.EnumMember(Value = "animalPrint")]
        AnimalPrint = 0,

        [System.Runtime.Serialization.EnumMember(Value = "checkered")]
        Checkered = 1,

        [System.Runtime.Serialization.EnumMember(Value = "colored")]
        Colored = 2,

        [System.Runtime.Serialization.EnumMember(Value = "floral")]
        Floral = 3,

        [System.Runtime.Serialization.EnumMember(Value = "polkaDot")]
        PolkaDot = 4,

        [System.Runtime.Serialization.EnumMember(Value = "striped")]
        Striped = 5,

        [System.Runtime.Serialization.EnumMember(Value = "paisley")]
        Paisley = 6,

        [System.Runtime.Serialization.EnumMember(Value = "plain")]
        Plain = 7,

        [System.Runtime.Serialization.EnumMember(Value = "print")]
        Print = 8,

        [System.Runtime.Serialization.EnumMember(Value = "burnout")]
        Burnout = 9,

        [System.Runtime.Serialization.EnumMember(Value = "herringBone")]
        HerringBone = 10,

        [System.Runtime.Serialization.EnumMember(Value = "camouflage")]
        Camouflage = 11,

        [System.Runtime.Serialization.EnumMember(Value = "flecked")]
        Flecked = 12,

        [System.Runtime.Serialization.EnumMember(Value = "pinstripe")]
        Pinstripe = 13,

        [System.Runtime.Serialization.EnumMember(Value = "gradient")]
        Gradient = 14,

        [System.Runtime.Serialization.EnumMember(Value = "photoPrint")]
        PhotoPrint = 15,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous12
    {
        [System.Runtime.Serialization.EnumMember(Value = "sale")]
        Sale = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous13
    {
        [System.Runtime.Serialization.EnumMember(Value = "winter")]
        Winter = 0,

        [System.Runtime.Serialization.EnumMember(Value = "summer")]
        Summer = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous14
    {
        [System.Runtime.Serialization.EnumMember(Value = "xs")]
        Xs = 0,

        [System.Runtime.Serialization.EnumMember(Value = "s")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = "m")]
        M = 2,

        [System.Runtime.Serialization.EnumMember(Value = "l")]
        L = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous15
    {
        [System.Runtime.Serialization.EnumMember(Value = "s")]
        S = 0,

        [System.Runtime.Serialization.EnumMember(Value = "m")]
        M = 1,

        [System.Runtime.Serialization.EnumMember(Value = "l")]
        L = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous16
    {
        [System.Runtime.Serialization.EnumMember(Value = "lapelCollar")]
        LapelCollar = 0,

        [System.Runtime.Serialization.EnumMember(Value = "mandarinCollar")]
        MandarinCollar = 1,

        [System.Runtime.Serialization.EnumMember(Value = "hood")]
        Hood = 2,

        [System.Runtime.Serialization.EnumMember(Value = "poloNeck")]
        PoloNeck = 3,

        [System.Runtime.Serialization.EnumMember(Value = "poloShirt")]
        PoloShirt = 4,

        [System.Runtime.Serialization.EnumMember(Value = "cowlNeck")]
        CowlNeck = 5,

        [System.Runtime.Serialization.EnumMember(Value = "roundNeck")]
        RoundNeck = 6,

        [System.Runtime.Serialization.EnumMember(Value = "scarfCollar")]
        ScarfCollar = 7,

        [System.Runtime.Serialization.EnumMember(Value = "boatNeck")]
        BoatNeck = 8,

        [System.Runtime.Serialization.EnumMember(Value = "vNeck")]
        VNeck = 9,

        [System.Runtime.Serialization.EnumMember(Value = "buttonDown")]
        ButtonDown = 10,

        [System.Runtime.Serialization.EnumMember(Value = "turnDownCollar")]
        TurnDownCollar = 11,

        [System.Runtime.Serialization.EnumMember(Value = "highCollar")]
        HighCollar = 12,

        [System.Runtime.Serialization.EnumMember(Value = "linedCollar")]
        LinedCollar = 13,

        [System.Runtime.Serialization.EnumMember(Value = "shirtCollar")]
        ShirtCollar = 14,

        [System.Runtime.Serialization.EnumMember(Value = "cutawayCollar")]
        CutawayCollar = 15,

        [System.Runtime.Serialization.EnumMember(Value = "doubleCollar")]
        DoubleCollar = 16,

        [System.Runtime.Serialization.EnumMember(Value = "peterPanCollar")]
        PeterPanCollar = 17,

        [System.Runtime.Serialization.EnumMember(Value = "kentCollar")]
        KentCollar = 18,

        [System.Runtime.Serialization.EnumMember(Value = "cupShapedCollar")]
        CupShapedCollar = 19,

        [System.Runtime.Serialization.EnumMember(Value = "contrastCollar")]
        ContrastCollar = 20,

        [System.Runtime.Serialization.EnumMember(Value = "maoCollar")]
        MaoCollar = 21,

        [System.Runtime.Serialization.EnumMember(Value = "wingCollar")]
        WingCollar = 22,

        [System.Runtime.Serialization.EnumMember(Value = "tabCollar")]
        TabCollar = 23,

        [System.Runtime.Serialization.EnumMember(Value = "volantCollar")]
        VolantCollar = 24,

        [System.Runtime.Serialization.EnumMember(Value = "shawlCollar")]
        ShawlCollar = 25,

        [System.Runtime.Serialization.EnumMember(Value = "envelope")]
        Envelope = 26,

        [System.Runtime.Serialization.EnumMember(Value = "lowVNeck")]
        LowVNeck = 27,

        [System.Runtime.Serialization.EnumMember(Value = "cacheCeour")]
        CacheCeour = 28,

        [System.Runtime.Serialization.EnumMember(Value = "lowRoundNeck")]
        LowRoundNeck = 29,

        [System.Runtime.Serialization.EnumMember(Value = "backless")]
        Backless = 30,

        [System.Runtime.Serialization.EnumMember(Value = "henley")]
        Henley = 31,

        [System.Runtime.Serialization.EnumMember(Value = "squareNeck")]
        SquareNeck = 32,

        [System.Runtime.Serialization.EnumMember(Value = "offTheShoulder")]
        OffTheShoulder = 33,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous17
    {
        [System.Runtime.Serialization.EnumMember(Value = "buckle")]
        Buckle = 0,

        [System.Runtime.Serialization.EnumMember(Value = "belt")]
        Belt = 1,

        [System.Runtime.Serialization.EnumMember(Value = "lacing")]
        Lacing = 2,

        [System.Runtime.Serialization.EnumMember(Value = "open")]
        Open = 3,

        [System.Runtime.Serialization.EnumMember(Value = "zipper")]
        Zipper = 4,

        [System.Runtime.Serialization.EnumMember(Value = "velcro")]
        Velcro = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous18
    {
        [System.Runtime.Serialization.EnumMember(Value = "round")]
        Round = 0,

        [System.Runtime.Serialization.EnumMember(Value = "pointed")]
        Pointed = 1,

        [System.Runtime.Serialization.EnumMember(Value = "open")]
        Open = 2,

        [System.Runtime.Serialization.EnumMember(Value = "square")]
        Square = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous19
    {
        [System.Runtime.Serialization.EnumMember(Value = "shop")]
        Shop = 0,

        [System.Runtime.Serialization.EnumMember(Value = "sale")]
        Sale = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous20
    {
        [System.Runtime.Serialization.EnumMember(Value = "outdoor")]
        Outdoor = 0,

        [System.Runtime.Serialization.EnumMember(Value = "skiSnow")]
        SkiSnow = 1,

        [System.Runtime.Serialization.EnumMember(Value = "running")]
        Running = 2,

        [System.Runtime.Serialization.EnumMember(Value = "training")]
        Training = 3,

        [System.Runtime.Serialization.EnumMember(Value = "football")]
        Football = 4,

        [System.Runtime.Serialization.EnumMember(Value = "handball")]
        Handball = 5,

        [System.Runtime.Serialization.EnumMember(Value = "basketball")]
        Basketball = 6,

        [System.Runtime.Serialization.EnumMember(Value = "volleyball")]
        Volleyball = 7,

        [System.Runtime.Serialization.EnumMember(Value = "golf")]
        Golf = 8,

        [System.Runtime.Serialization.EnumMember(Value = "tennis")]
        Tennis = 9,

        [System.Runtime.Serialization.EnumMember(Value = "beach")]
        Beach = 10,

        [System.Runtime.Serialization.EnumMember(Value = "skate")]
        Skate = 11,

        [System.Runtime.Serialization.EnumMember(Value = "riding")]
        Riding = 12,

        [System.Runtime.Serialization.EnumMember(Value = "cycling")]
        Cycling = 13,

        [System.Runtime.Serialization.EnumMember(Value = "sailing")]
        Sailing = 14,

        [System.Runtime.Serialization.EnumMember(Value = "badminton")]
        Badminton = 15,

        [System.Runtime.Serialization.EnumMember(Value = "dancing")]
        Dancing = 16,

        [System.Runtime.Serialization.EnumMember(Value = "snowboard")]
        Snowboard = 17,

        [System.Runtime.Serialization.EnumMember(Value = "swimming")]
        Swimming = 18,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous21
    {
        [System.Runtime.Serialization.EnumMember(Value = "clima365")]
        Clima365 = 0,

        [System.Runtime.Serialization.EnumMember(Value = "climacool")]
        Climacool = 1,

        [System.Runtime.Serialization.EnumMember(Value = "climalite")]
        Climalite = 2,

        [System.Runtime.Serialization.EnumMember(Value = "climaproof")]
        Climaproof = 3,

        [System.Runtime.Serialization.EnumMember(Value = "climawarm")]
        Climawarm = 4,

        [System.Runtime.Serialization.EnumMember(Value = "driFit")]
        DriFit = 5,

        [System.Runtime.Serialization.EnumMember(Value = "flywire")]
        Flywire = 6,

        [System.Runtime.Serialization.EnumMember(Value = "formotion")]
        Formotion = 7,

        [System.Runtime.Serialization.EnumMember(Value = "omniHeat")]
        OmniHeat = 8,

        [System.Runtime.Serialization.EnumMember(Value = "polartec")]
        Polartec = 9,

        [System.Runtime.Serialization.EnumMember(Value = "primaloft")]
        Primaloft = 10,

        [System.Runtime.Serialization.EnumMember(Value = "staywarm")]
        Staywarm = 11,

        [System.Runtime.Serialization.EnumMember(Value = "techfit")]
        Techfit = 12,

        [System.Runtime.Serialization.EnumMember(Value = "thinsulate")]
        Thinsulate = 13,

        [System.Runtime.Serialization.EnumMember(Value = "venturi")]
        Venturi = 14,

        [System.Runtime.Serialization.EnumMember(Value = "h2no")]
        H2no = 15,

        [System.Runtime.Serialization.EnumMember(Value = "dermizax")]
        Dermizax = 16,

        [System.Runtime.Serialization.EnumMember(Value = "performanceShell")]
        PerformanceShell = 17,

        [System.Runtime.Serialization.EnumMember(Value = "softShell")]
        SoftShell = 18,

        [System.Runtime.Serialization.EnumMember(Value = "windstopper")]
        Windstopper = 19,

        [System.Runtime.Serialization.EnumMember(Value = "proShell")]
        ProShell = 20,

        [System.Runtime.Serialization.EnumMember(Value = "hydratic")]
        Hydratic = 21,

        [System.Runtime.Serialization.EnumMember(Value = "pacliteShell")]
        PacliteShell = 22,

        [System.Runtime.Serialization.EnumMember(Value = "activeShell")]
        ActiveShell = 23,

        [System.Runtime.Serialization.EnumMember(Value = "goreTex")]
        GoreTex = 24,

        [System.Runtime.Serialization.EnumMember(Value = "hyvent")]
        Hyvent = 25,

        [System.Runtime.Serialization.EnumMember(Value = "texapore")]
        Texapore = 26,

        [System.Runtime.Serialization.EnumMember(Value = "precip")]
        Precip = 27,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous22
    {
        [System.Runtime.Serialization.EnumMember(Value = "high")]
        High = 0,

        [System.Runtime.Serialization.EnumMember(Value = "medium")]
        Medium = 1,

        [System.Runtime.Serialization.EnumMember(Value = "low")]
        Low = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous23
    {
        [System.Runtime.Serialization.EnumMember(Value = "batiste")]
        Batiste = 0,

        [System.Runtime.Serialization.EnumMember(Value = "caoutchouc")]
        Caoutchouc = 1,

        [System.Runtime.Serialization.EnumMember(Value = "cashmere")]
        Cashmere = 2,

        [System.Runtime.Serialization.EnumMember(Value = "damask")]
        Damask = 3,

        [System.Runtime.Serialization.EnumMember(Value = "down")]
        Down = 4,

        [System.Runtime.Serialization.EnumMember(Value = "feathers")]
        Feathers = 5,

        [System.Runtime.Serialization.EnumMember(Value = "felt")]
        Felt = 6,

        [System.Runtime.Serialization.EnumMember(Value = "flanelette")]
        Flanelette = 7,

        [System.Runtime.Serialization.EnumMember(Value = "flannel")]
        Flannel = 8,

        [System.Runtime.Serialization.EnumMember(Value = "fleece")]
        Fleece = 9,

        [System.Runtime.Serialization.EnumMember(Value = "imitationLeather")]
        ImitationLeather = 10,

        [System.Runtime.Serialization.EnumMember(Value = "jacquard")]
        Jacquard = 11,

        [System.Runtime.Serialization.EnumMember(Value = "jersey")]
        Jersey = 12,

        [System.Runtime.Serialization.EnumMember(Value = "leather")]
        Leather = 13,

        [System.Runtime.Serialization.EnumMember(Value = "linen")]
        Linen = 14,

        [System.Runtime.Serialization.EnumMember(Value = "linon")]
        Linon = 15,

        [System.Runtime.Serialization.EnumMember(Value = "mesh")]
        Mesh = 16,

        [System.Runtime.Serialization.EnumMember(Value = "microfiber")]
        Microfiber = 17,

        [System.Runtime.Serialization.EnumMember(Value = "mohair")]
        Mohair = 18,

        [System.Runtime.Serialization.EnumMember(Value = "other")]
        Other = 19,

        [System.Runtime.Serialization.EnumMember(Value = "percale")]
        Percale = 20,

        [System.Runtime.Serialization.EnumMember(Value = "polyester")]
        Polyester = 21,

        [System.Runtime.Serialization.EnumMember(Value = "renforce")]
        Renforce = 22,

        [System.Runtime.Serialization.EnumMember(Value = "satin")]
        Satin = 23,

        [System.Runtime.Serialization.EnumMember(Value = "seersucker")]
        Seersucker = 24,

        [System.Runtime.Serialization.EnumMember(Value = "silk")]
        Silk = 25,

        [System.Runtime.Serialization.EnumMember(Value = "synthetic")]
        Synthetic = 26,

        [System.Runtime.Serialization.EnumMember(Value = "textile")]
        Textile = 27,

        [System.Runtime.Serialization.EnumMember(Value = "towelling")]
        Towelling = 28,

        [System.Runtime.Serialization.EnumMember(Value = "varnish")]
        Varnish = 29,

        [System.Runtime.Serialization.EnumMember(Value = "velours")]
        Velours = 30,

        [System.Runtime.Serialization.EnumMember(Value = "viscose")]
        Viscose = 31,

        [System.Runtime.Serialization.EnumMember(Value = "wool")]
        Wool = 32,

        [System.Runtime.Serialization.EnumMember(Value = "cord")]
        Cord = 33,

        [System.Runtime.Serialization.EnumMember(Value = "denim")]
        Denim = 34,

        [System.Runtime.Serialization.EnumMember(Value = "rib")]
        Rib = 35,

        [System.Runtime.Serialization.EnumMember(Value = "braided")]
        Braided = 36,

        [System.Runtime.Serialization.EnumMember(Value = "crocheted")]
        Crocheted = 37,

        [System.Runtime.Serialization.EnumMember(Value = "hardshell")]
        Hardshell = 38,

        [System.Runtime.Serialization.EnumMember(Value = "softshell")]
        Softshell = 39,

        [System.Runtime.Serialization.EnumMember(Value = "lace")]
        Lace = 40,

        [System.Runtime.Serialization.EnumMember(Value = "sweat")]
        Sweat = 41,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous24
    {
        [System.Runtime.Serialization.EnumMember(Value = "smallest")]
        Smallest = 0,

        [System.Runtime.Serialization.EnumMember(Value = "small")]
        Small = 1,

        [System.Runtime.Serialization.EnumMember(Value = "medium")]
        Medium = 2,

        [System.Runtime.Serialization.EnumMember(Value = "large")]
        Large = 3,

        [System.Runtime.Serialization.EnumMember(Value = "largest")]
        Largest = 4,

    }

    /// <summary>sorting order (eg: popularity)</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Sort
    {
        [System.Runtime.Serialization.EnumMember(Value = "popularity")]
        Popularity = 0,

        [System.Runtime.Serialization.EnumMember(Value = "activationdate")]
        Activationdate = 1,

        [System.Runtime.Serialization.EnumMember(Value = "pricedesc")]
        Pricedesc = 2,

        [System.Runtime.Serialization.EnumMember(Value = "priceasc")]
        Priceasc = 3,

        [System.Runtime.Serialization.EnumMember(Value = "sale")]
        Sale = 4,

    }

    /// <summary>Specify which Shop to use.
    /// 
    /// A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
    /// shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.
    /// 
    /// The shop choosen will e.g. define the currency used for prices as well as the language for product names and
    /// descriptions. Furthermore it will impact which articles are available as they might differ between countries.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum AcceptLanguage
    {
        [System.Runtime.Serialization.EnumMember(Value = "da-DK")]
        DaDK = 0,

        [System.Runtime.Serialization.EnumMember(Value = "de-AT")]
        DeAT = 1,

        [System.Runtime.Serialization.EnumMember(Value = "de-CH")]
        DeCH = 2,

        [System.Runtime.Serialization.EnumMember(Value = "de-DE")]
        DeDE = 3,

        [System.Runtime.Serialization.EnumMember(Value = "en-GB")]
        EnGB = 4,

        [System.Runtime.Serialization.EnumMember(Value = "es-ES")]
        EsES = 5,

        [System.Runtime.Serialization.EnumMember(Value = "fi-FI")]
        FiFI = 6,

        [System.Runtime.Serialization.EnumMember(Value = "fr-BE")]
        FrBE = 7,

        [System.Runtime.Serialization.EnumMember(Value = "fr-CH")]
        FrCH = 8,

        [System.Runtime.Serialization.EnumMember(Value = "fr-FR")]
        FrFR = 9,

        [System.Runtime.Serialization.EnumMember(Value = "it-IT")]
        ItIT = 10,

        [System.Runtime.Serialization.EnumMember(Value = "nl-BE")]
        NlBE = 11,

        [System.Runtime.Serialization.EnumMember(Value = "nl-NL")]
        NlNL = 12,

        [System.Runtime.Serialization.EnumMember(Value = "no-NO")]
        NoNO = 13,

        [System.Runtime.Serialization.EnumMember(Value = "pl-PL")]
        PlPL = 14,

        [System.Runtime.Serialization.EnumMember(Value = "sv-SE")]
        SvSE = 15,

    }

    /// <summary>articles are sorted on reviews provided by customers (eg: best)</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Sort2
    {
        [System.Runtime.Serialization.EnumMember(Value = "newest")]
        Newest = 0,

        [System.Runtime.Serialization.EnumMember(Value = "best")]
        Best = 1,

        [System.Runtime.Serialization.EnumMember(Value = "worst")]
        Worst = 2,

        [System.Runtime.Serialization.EnumMember(Value = "most_helpful")]
        Most_helpful = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum ArticleSeason
    {
        [System.Runtime.Serialization.EnumMember(Value = "SUMMER")]
        SUMMER = 0,

        [System.Runtime.Serialization.EnumMember(Value = "WINTER")]
        WINTER = 1,

        [System.Runtime.Serialization.EnumMember(Value = "ALL")]
        ALL = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous25
    {
        [System.Runtime.Serialization.EnumMember(Value = "MALE")]
        MALE = 0,

        [System.Runtime.Serialization.EnumMember(Value = "FEMALE")]
        FEMALE = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum Anonymous26
    {
        [System.Runtime.Serialization.EnumMember(Value = "BABY")]
        BABY = 0,

        [System.Runtime.Serialization.EnumMember(Value = "CHILD")]
        CHILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = "TEEN")]
        TEEN = 2,

        [System.Runtime.Serialization.EnumMember(Value = "ADULT")]
        ADULT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleSizeRatings
    {
        [Newtonsoft.Json.JsonProperty("OVERALL", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? OVERALL { get; set; }

        [Newtonsoft.Json.JsonProperty("CHEST", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CHEST { get; set; }

        [Newtonsoft.Json.JsonProperty("SLEEVES", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SLEEVES { get; set; }

        [Newtonsoft.Json.JsonProperty("SHOULDERS", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SHOULDERS { get; set; }

        [Newtonsoft.Json.JsonProperty("LENGTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LENGTH { get; set; }

        [Newtonsoft.Json.JsonProperty("LEG_FIT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LEG_FIT { get; set; }

        [Newtonsoft.Json.JsonProperty("SHOE_WIDTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SHOE_WIDTH { get; set; }

        [Newtonsoft.Json.JsonProperty("BOOTLEG_WIDTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? BOOTLEG_WIDTH { get; set; }

        [Newtonsoft.Json.JsonProperty("HIPS_OR_REAR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? HIPS_OR_REAR { get; set; }

        [Newtonsoft.Json.JsonProperty("CUP_SIZE", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CUP_SIZE { get; set; }

        [Newtonsoft.Json.JsonProperty("CHEST_GIRTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CHEST_GIRTH { get; set; }

        [Newtonsoft.Json.JsonProperty("COLLAR_SIZE", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? COLLAR_SIZE { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleSizeRatings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleSizeRatings>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class StarRatingDistribution
    {
        [Newtonsoft.Json.JsonProperty("1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int _1 { get; set; }

        [Newtonsoft.Json.JsonProperty("2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int _2 { get; set; }

        [Newtonsoft.Json.JsonProperty("3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int _3 { get; set; }

        [Newtonsoft.Json.JsonProperty("4", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int _4 { get; set; }

        [Newtonsoft.Json.JsonProperty("5", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int _5 { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static StarRatingDistribution FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StarRatingDistribution>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public partial class ArticleSizeRatings2
    {
        [Newtonsoft.Json.JsonProperty("OVERALL", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OVERALL { get; set; }

        [Newtonsoft.Json.JsonProperty("CHEST", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CHEST { get; set; }

        [Newtonsoft.Json.JsonProperty("SLEEVES", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SLEEVES { get; set; }

        [Newtonsoft.Json.JsonProperty("SHOULDERS", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SHOULDERS { get; set; }

        [Newtonsoft.Json.JsonProperty("LENGTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? LENGTH { get; set; }

        [Newtonsoft.Json.JsonProperty("LEG_FIT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? LEG_FIT { get; set; }

        [Newtonsoft.Json.JsonProperty("SHOE_WIDTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SHOE_WIDTH { get; set; }

        [Newtonsoft.Json.JsonProperty("BOOTLEG_WIDTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BOOTLEG_WIDTH { get; set; }

        [Newtonsoft.Json.JsonProperty("HIPS_OR_REAR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? HIPS_OR_REAR { get; set; }

        [Newtonsoft.Json.JsonProperty("CUP_SIZE", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CUP_SIZE { get; set; }

        [Newtonsoft.Json.JsonProperty("CHEST_GIRTH", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CHEST_GIRTH { get; set; }

        [Newtonsoft.Json.JsonProperty("COLLAR_SIZE", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? COLLAR_SIZE { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static ArticleSizeRatings2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArticleSizeRatings2>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum CategoryTargetGroup
    {
        [System.Runtime.Serialization.EnumMember(Value = "ALL")]
        ALL = 0,

        [System.Runtime.Serialization.EnumMember(Value = "WOMEN")]
        WOMEN = 1,

        [System.Runtime.Serialization.EnumMember(Value = "MEN")]
        MEN = 2,

        [System.Runtime.Serialization.EnumMember(Value = "KIDS")]
        KIDS = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    public enum FilterType
    {
        [System.Runtime.Serialization.EnumMember(Value = "SKU")]
        SKU = 0,

        [System.Runtime.Serialization.EnumMember(Value = "KEY")]
        KEY = 1,

        [System.Runtime.Serialization.EnumMember(Value = "ENUM")]
        ENUM = 2,

        [System.Runtime.Serialization.EnumMember(Value = "STRING")]
        STRING = 3,

        [System.Runtime.Serialization.EnumMember(Value = "RANGE")]
        RANGE = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.33.6323.36213")]
    internal class JsonInheritanceConverter : Newtonsoft.Json.JsonConverter
    {
        internal static readonly string DefaultDiscriminatorName = "discriminator";

        private readonly string _discriminator;

        [System.ThreadStatic]
        private static bool _isReading;

        [System.ThreadStatic]
        private static bool _isWriting;

        public JsonInheritanceConverter()
        {
            _discriminator = DefaultDiscriminatorName;
        }

        public JsonInheritanceConverter(string discriminator)
        {
            _discriminator = discriminator;
        }

        public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
        {
            try
            {
                _isWriting = true;

                var jObject = Newtonsoft.Json.Linq.JObject.FromObject(value, serializer);
                jObject.AddFirst(new Newtonsoft.Json.Linq.JProperty(_discriminator, value.GetType().Name));
                writer.WriteToken(jObject.CreateReader());
            }
            finally
            {
                _isWriting = false;
            }
        }

        public override bool CanWrite
        {
            get
            {
                if (_isWriting)
                {
                    _isWriting = false;
                    return false;
                }
                return true;
            }
        }

        public override bool CanRead
        {
            get
            {
                if (_isReading)
                {
                    _isReading = false;
                    return false;
                }
                return true;
            }
        }

        public override bool CanConvert(System.Type objectType)
        {
            return true;
        }

        public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
        {
            var jObject = serializer.Deserialize<Newtonsoft.Json.Linq.JObject>(reader);
            var discriminator = Newtonsoft.Json.Linq.Extensions.Value<string>(jObject.GetValue(_discriminator));
            var subtype = GetObjectSubtype(objectType, discriminator);

            try
            {
                _isReading = true;
                return serializer.Deserialize(jObject.CreateReader(), subtype);
            }
            finally
            {
                _isReading = false;
            }
        }

        private System.Type GetObjectSubtype(System.Type objectType, string discriminator)
        {
            var objectTypeInfo = System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType);
            var customAttributes = System.Reflection.CustomAttributeExtensions.GetCustomAttributes(objectTypeInfo);

            var knownTypeAttributes = System.Linq.Enumerable.Where(customAttributes, a => a.GetType().Name == "KnownTypeAttribute");
            dynamic knownTypeAttribute = System.Linq.Enumerable.SingleOrDefault(knownTypeAttributes, a => IsKnwonTypeTargetType(a, discriminator));
            if (knownTypeAttribute != null)
                return knownTypeAttribute.Type;

            var typeName = objectType.Namespace + "." + discriminator;
            return System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType).Assembly.GetType(typeName);
        }

        private bool IsKnwonTypeTargetType(dynamic attribute, string discriminator)
        {
            return attribute?.Type.Name == discriminator;
        }
    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "10.6.6324.28497")]
    public class SwaggerException : System.Exception
    {
        public string StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public SwaggerException(string message, string statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message, innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "10.6.6324.28497")]
    public class SwaggerException<TResult> : SwaggerException
    {
        public TResult Result { get; private set; }

        public SwaggerException(string message, string statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }


}